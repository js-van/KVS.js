KVS.THREEScreen=function(){this.height=this.width=0;this.trackball=this.renderer=this.light=this.camera=this.scene=void 0};
KVS.THREEScreen.prototype={constructor:KVS.THREEScreen,init:function(a){this.width=window.innerWidth;this.height=window.innerHeight;var d=a.max_coord.clone().sub(a.min_coord).max();a=a.objectCenter();var e=this.width/this.height,c=100*d;this.scene=new THREE.Scene;this.camera=new THREE.PerspectiveCamera(45,e,.1,c);this.camera.position.set(a.x,a.y,2*d);this.camera.up.set(0,1,0);this.scene.add(this.camera);this.light=new THREE.DirectionalLight(new THREE.Color("white"));this.light.position=this.camera.position;
this.scene.add(this.light);this.renderer=new THREE.WebGLRenderer;this.renderer.setSize(this.width,this.height);this.renderer.setClearColor(new THREE.Color(.828125,.86328125,.89453125));this.trackball=new THREE.TrackballControls(this.camera);this.trackball.staticMoving=!0;this.trackball.rotateSpeed=3;this.trackball.radius=Math.min(this.width,this.height);this.trackball.target=a;this.trackball.update();this.trackball.addEventListener("change",this.draw);document.body.appendChild(this.renderer.domElement);
window.addEventListener("resize",this.resize.bind(this),!1)},resize:function(){this.width=window.innerWidth;this.height=window.innerHeight;var a=this.width/this.height;this.renderer.setSize(this.width,this.height);this.camera.aspect=a;this.camera.updateProjectionMatrix();this.trackball.handleResize();this.draw()},draw:function(){void 0!=this.renderer&&(this.renderer.render(this.scene,this.camera),this.trackball.update())},loop:function(){requestAnimationFrame(this.loop.bind(this));this.draw()}};KVS.ToTHREELine=function(a){var d=new THREE.Geometry,e=new THREE.LineBasicMaterial;e.linewidth=a.width;if(0==a.colors.length)e.color=new THREE.Color("white");else if(1==a.colors.length){var c=a.colors[0];e.color=new THREE.Color(c[0],c[1],c[2])}else if(a.colors.length==a.coords.length){e.vertexColors=THREE.VertexColors;for(var b=0;b<a.colors.length;b++)c=a.colors[b],d.colors.push(new THREE.Color(c[0],c[1],c[2]))}else e.vertexColors=THREE.FaceColors,console.log("Not supported.");c=a.coords.length;for(b=
0;b<c;b++){var f=(new THREE.Vector3).fromArray(a.coords[b]);d.vertices.push(f)}return new THREE.Line(d,e,a.line_type==KVS.StripLine?THREE.LineStrip:THREE.LinePieces)};KVS.ToTHREEMesh=function(a){var d=new THREE.Geometry,e=new THREE.MeshLambertMaterial;e.side=THREE.DoubleSide;for(var c=a.connections.length,b=0;b<c;b++){var f=a.connections[b];d.faces.push(new THREE.Face3(f[0],f[1],f[2]))}if(0==a.colors.length)e.color=new THREE.Color("white");else if(1==a.colors.length)f=a.colors[0],e.color=new THREE.Color(f[0],f[1],f[2]);else if(a.colors.length==a.coords.length)for(e.vertexColors=THREE.VertexColors,b=0;b<c;b++){var f=a.colors[d.faces[b].a],g=a.colors[d.faces[b].b],
h=a.colors[d.faces[b].c];d.faces[b].vertexColors.push(new THREE.Color(f[0],f[1],f[2]));d.faces[b].vertexColors.push(new THREE.Color(g[0],g[1],g[2]));d.faces[b].vertexColors.push(new THREE.Color(h[0],h[1],h[2]))}else if(a.colors.length==a.connections.length)for(e.vertexColors=THREE.FaceColors,b=0;b<c;b++)f=a.colors[b],d.faces[b].color=new THREE.Color(f[0],f[1],f[2]);c=a.numberOfVertices();for(b=0;b<c;b++)f=(new THREE.Vector3).fromArray(a.coords[b]),d.vertices.push(f);d.computeFaceNormals();d.computeVertexNormals();
return new THREE.Mesh(d,e)};KVS.ToTHREEParticleSystem=function(a){THREE.ShaderLib.particle_basic.fragmentShader=["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\nvec3 n;\nn.xy = gl_PointCoord * 2.0 - 1.0;\nn.z = 1.0 - dot( n.xy, n.xy );\nif ( n.z < 0.0 ) discard;\n    gl_FragColor = vec4( psColor, opacity );",
THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n");var d=new THREE.Geometry,e=new THREE.ParticleSystemMaterial;e.size=a.size;if(0==a.colors.length)e.color=new THREE.Color("white");else if(1==a.colors.length){var c=a.colors[0];e.color=new THREE.Color(c[0],c[1],c[2])}else{e.vertexColors=!0;for(var b=0;b<a.colors.length;b++)c=
a.colors[b],d.colors.push(new THREE.Color(c[0],c[1],c[2]))}c=a.coords.length;for(b=0;b<c;b++){var f=(new THREE.Vector3).fromArray(a.coords[b]);d.vertices.push(f)}return new THREE.ParticleSystem(d,e)};
